题目：使用Java原生线程实现生产者向仓库存储消息，消费者从仓库获得消息的场景。
元素：
1. 仓库：存储不同种类的消息。消息的种类以Topic来区分。
2. 生产者：生产不同种类Topic的消息，并发送（send）给仓库。
3. 消费者：从仓库中取出指定种类Topic的消息。
4. Topic：消息种类

目标：
1. 实现 producer::createBytesMessafeToTopic(topic, body) 创建Topic种类的消息
2. 实现 producer::send(message) 发送消息
3. 实现 producer::flush 发送结束时会调用该函数
4. 实现 consumer::attachQueue(queue, topics) 为队列绑定消息类型
5. 实现 consumer::poll() 消费者拉取queue中绑定的消息类型
6. 实现 store 类，存储和获得消息
7. Topic的生成有时间先后顺序，消费者读取时也按时间顺序进行读取

性能影响因素：
1. 仓库的存储结构，如何存储以Topic为key的分类数据（消费者消耗也不会删除实体，允许有多个消费者同时消费同一个Topic，先后顺序不同步 ）
2. 消费者如何消费数据
3. 生产者如何生成和发送数据
